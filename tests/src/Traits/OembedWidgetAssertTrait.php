<?php

declare(strict_types = 1);

namespace Drupal\Tests\oe_oembed\Traits;

use Behat\Mink\Element\NodeElement;
use Drupal\Core\Entity\EntityInterface;

/**
 * Contains methods to assert widgets generated by the CKEditor 5 JS plugin.
 */
trait OembedWidgetAssertTrait {

  /**
   * Returns the first instance of a block embed widget for a given entity.
   *
   * @param \Drupal\Core\Entity\EntityInterface $entity
   *   The entity.
   * @param \Behat\Mink\Element\NodeElement $editor
   *   The editor element.
   *
   * @return \Behat\Mink\Element\NodeElement
   *   The block widget element wrapper.
   */
  protected function assertBlockEmbedWidget(EntityInterface $entity, NodeElement $editor): NodeElement {
    $assert_session = $this->assertSession();
    $xpath = sprintf(
      '%s[%s]',
      $this->cssSelectToXpath('p.ck-oe-oembed.ck-widget'),
      $this->cssSelectToXpath(sprintf('span > a[href="https://data.ec.europa.eu/ewp/%s/%s"]', $entity->getEntityTypeId(), $entity->uuid()), TRUE, './')
    );
    $widget = $assert_session->elementExists('xpath', $xpath, $editor);
    $this->assertEquals($entity->label(), $widget->find('css', 'a')->getHtml());

    return $widget;
  }

  /**
   * Returns the first instance of an inline embed widget for a given entity.
   *
   * @param \Drupal\Core\Entity\EntityInterface $entity
   *   The entity.
   * @param \Behat\Mink\Element\NodeElement $editor
   *   The editor element.
   *
   * @return \Behat\Mink\Element\NodeElement
   *   The inline widget element wrapper.
   */
  protected function assertInlineEmbedWidget(EntityInterface $entity, NodeElement $editor): NodeElement {
    $assert_session = $this->assertSession();
    $xpath = sprintf(
      '%s[%s]',
      $this->cssSelectToXpath('span.ck-oe-oembed.ck-widget'),
      $this->cssSelectToXpath(sprintf('a[href="https://data.ec.europa.eu/ewp/%s/%s"]', $entity->getEntityTypeId(), $entity->uuid()), TRUE, './')
    );
    $widget = $assert_session->elementExists('xpath', $xpath, $editor);
    $this->assertEquals($entity->label(), $widget->find('css', 'a')->getHtml());

    return $widget;
  }

}
